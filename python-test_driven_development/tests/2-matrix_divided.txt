	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Import function:
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	NameError: name 'matrix' is not defined

Test one of elements in matrix is negative intiger:
	>>> matrix_divided([[-1, 2, 3], [4, 5, 6]], 3)
	[[-0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test at least one el of matrix is negative and divider negative :
	>>> matrix_divided([[-1, 2, 3], [4, 5, 6]], -3)
	[[0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Test one element of matrix is 0 and divider is intiger:
        >>> matrix_divided([[-1, 2, 3], [0, 5, 6]], 3)
        [[-0.33, 0.67, 1.0], [0.0, 1.67, 2.0]]

Test divider is 0:
        >>> matrix_divided([[-1, 2, 3], [0, 5, 6]], 0)
        Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test matrix is 0 and divider is 0:
        >>> matrix_divided([[0, 0, 0], [0, 0, 0]], 0)
        Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test division not defined:
        >>> matrix_divided([[7, 2, 3], [4, 5, 6]], c)
        Traceback (most recent call last):
	NameError: name 'c' is not defined

Test division not integer:
        >>> matrix_divided([[7, 2, 3], [4, 5, 6]], "c")
        Traceback (most recent call last):
        TypeError: div must be a number

Test one element of matrix is float divider integer:
        >>> matrix_divided([[7, 2, 3], [4, 5, 6.6]], 3)
        [[2.33, 0.67, 1.0], [1.33, 1.67, 2.2]]

Test two inputs are float:
        >>> matrix_divided([[7, 2, 3], [4, 5, 6.6]], 3.33)
	[[2.1, 0.6, 0.9], [1.2, 1.5, 1.98]]

Test matrix or character not defined:
        >>> matrix_divided([[1, "c", 3], [4, 5, 6]], 3)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test el in matrix:
        >>> matrix_divided([[1, float('+inf'), 3], [4, 5, 6]], 3)
        [[0.33, inf, 1.0], [1.33, 1.67, 2.0]]

Test el in matrix is NaN and divider infinite :
        >>> matrix_divided([[1, float('NaN'), 3], [4, 5, 6]], float('-inf'))
        [[-0.0, nan, -0.0], [-0.0, -0.0, -0.0]]

Test el in matrix is not rectangular and divider integer :
	>>> matrix_divided([[1, 2, 2.56, 3], [4, 5, 6]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Test el in matrix and divider integer :
	>>> matrix_divided([[3]], 3)
	[[1.0]]

Test el in matrix and divider integer :	
	>>> matrix_divided([[]], 3)
	[[]]
